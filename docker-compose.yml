services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: coxistai-postgres
    environment:
      POSTGRES_DB: coxistai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - coxistai-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: coxistai-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/coxistai
      - PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    volumes:
      - ./backend/.env:/app/.env
    networks:
      - coxistai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: coxistai-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api/v1
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend/.env:/app/.env
    networks:
      - coxistai-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  coxistai-network:
    driver: bridge
